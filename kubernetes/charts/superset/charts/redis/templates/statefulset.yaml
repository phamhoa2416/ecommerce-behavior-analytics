apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "redis.name" . }}
  labels:
    {{ include "redis.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "redis.name" . }}
  replicas: {{ .Values.redis.replicaCount }}
  selector:
    matchLabels:
      {{ include "redis.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{ include "redis.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: redis
          image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}"
          imagePullPolicy: {{ .Values.redis.image.pullPolicy }}
          command:
            - redis-server
            - /usr/local/etc/redis/redis.conf
            - --requirepass
            - $(REDIS_PASSWORD)
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "redis.name" . }}-secret
                  key: redis-password
          volumeMounts:
            - name: config
              mountPath: /usr/local/etc/redis
        {{- if .Values.redis.persistence.enabled }}
            - name: data
              mountPath: /data
        {{- end }}
          livenessProbe:
            tcpSocket:
              port: redis
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - redis-cli
                - --pass
                - $(REDIS_PASSWORD)
                - ping
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
          {{ toYaml .Values.redis.resources | nindent 12 }}
      volumes:
        - name: config
          configMap:
            name: {{ include "redis.name" . }}-config
  {{- if .Values.redis.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
      {{- if .Values.redis.persistence.storageClass }}
        storageClassName: {{ .Values.redis.persistence.storageClass }}
      {{- end }}
        resources:
          requests:
            storage: {{ .Values.redis.persistence.size }}
  {{- end }}