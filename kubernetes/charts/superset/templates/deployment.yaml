apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "superset.name" . }}
  labels:
    {{ include "superset.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.superset.replicas }}
  selector:
    matchLabels:
      {{ include "superset.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{ include "superset.selectorLabels" . | nindent 8 }}
    spec:
      initContainers:
      - name: wait-for-redis
        image: busybox:1.36
        command:
          - sh
          - -c
          - |
            echo "Waiting for Redis to be ready..."
            until nc -z redis 6379; do
              echo "Redis is unavailable - sleeping"
              sleep 2
            done
            echo "Redis is up and ready!"
      - name: init-superset
        image: "{{ .Values.superset.image.repository }}:{{ .Values.superset.image.tag }}"
        imagePullPolicy: {{ .Values.superset.image.pullPolicy }}
        command:
        - /bin/sh
        - -c
        - |
          set -ex

          echo "Installing required packages..."
          pip install --no-cache-dir psycopg2-binary redis clickhouse-connect

          {{- if .Values.superset.env.database.host }}
          echo "Waiting for database to be ready..."
          until pg_isready -h {{ .Values.superset.env.database.host }} -p {{ .Values.superset.env.database.port }}; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done
          {{- end }}

          echo "Ensuring database directory exists..."
          mkdir -p /app/superset_home

          echo "Initializing Superset database..."
          superset db upgrade

          sleep 10

          echo "Creating admin user..."
          superset fab create-admin \
            --username admin \
            --firstname Admin \
            --lastname User \
            --email admin@superset.com \
            --password password

          echo "Running superset init..."
          superset init

          echo "Setup completed successfully!"

          {{- if .Values.superset.env.clickhouse.enabled }}
          echo "Installing ClickHouse driver..."
          pip install clickhouse-connect
          {{- end }}

          echo "Initialization complete!"
        env:
        - name: SUPERSET_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "superset.name" . }}-secret
              key: secret-key
        {{- if .Values.superset.env.database.host }}
        - name: DATABASE_DB
          value: {{ .Values.superset.env.database.name }}
        - name: DATABASE_HOST
          value: {{ .Values.superset.env.database.host }}
        - name: DATABASE_PORT
          value: {{ .Values.superset.env.database.port | quote }}
        - name: DATABASE_USER
          valueFrom:
            secretKeyRef:
              name: {{ include "superset.name" . }}-secret
              key: db-username
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "superset.name" . }}-secret
              key: db-password
        - name: SUPERSET_DATABASE_URI
          value: "postgresql+psycopg2://$(DATABASE_USER):$(DATABASE_PASSWORD)@$(DATABASE_HOST):$(DATABASE_PORT)/$(DATABASE_DB)"
        - name: SUPERSET_HOME
          value: /app/superset_home
        {{- end }}
        {{- if .Values.superset.env.redis.enabled }}
        - name: REDIS_HOST
          value: {{ .Values.superset.env.redis.host }}
        - name: REDIS_PORT
          value: {{ .Values.superset.env.redis.port | quote }}
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "superset.name" . }}-secret
              key: redis-password
        {{- end }}
        volumeMounts:
        - name: superset-config
          mountPath: /app/pythonpath
        - name: superset-home
          mountPath: /app/superset_home
      containers:
      - name: superset
        image: "{{ .Values.superset.image.repository }}:{{ .Values.superset.image.tag }}"
        imagePullPolicy: {{ .Values.superset.image.pullPolicy }}
        command:
        - /bin/sh
        - -c
        - |
          {{- if .Values.superset.env.clickhouse.enabled }}
          echo "Installing ClickHouse driver..."
          pip install --no-cache-dir redis clickhouse-connect
          {{- end }}
          {{- if .Values.superset.env.redis.enabled }}
          echo "Verifying Redis connection..."
          python3 -c "
          import redis
          import os
          try:
              r = redis.Redis(
                  host=os.environ.get('REDIS_HOST', 'redis'),
                  port=int(os.environ.get('REDIS_PORT', 6379)),
                  password=os.environ.get('REDIS_PASSWORD', 'redispassword'),
                  decode_responses=True
              )
              r.ping()
              print('✓ Redis connection successful')
          except Exception as e:
              print(f'✗ Redis connection failed: {e}')
              exit(1)
          "
          {{- end }}

          echo "Starting Superset..."
          gunicorn \
            --bind 0.0.0.0:8088 \
            --workers 4 \
            --timeout 120 \
            --limit-request-line 0 \
            --limit-request-field_size 0 \
            "superset.app:create_app()"
        ports:
        - name: http
          containerPort: 8088
          protocol: TCP
        env:
        - name: SUPERSET_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "superset.name" . }}-secret
              key: secret-key
        - name: PYTHONPATH
          value: /app/pythonpath
        {{- if .Values.superset.env.database.host }}
        - name: DATABASE_DB
          value: {{ .Values.superset.env.database.name }}
        - name: DATABASE_HOST
          value: {{ .Values.superset.env.database.host }}
        - name: DATABASE_PORT
          value: {{ .Values.superset.env.database.port | quote }}
        - name: DATABASE_USER
          valueFrom:
            secretKeyRef:
              name: {{ include "superset.name" . }}-secret
              key: db-username
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "superset.name" . }}-secret
              key: db-password
        - name: SUPERSET_DATABASE_URI
          value: "postgresql+psycopg2://$(DATABASE_USER):$(DATABASE_PASSWORD)@$(DATABASE_HOST):$(DATABASE_PORT)/$(DATABASE_DB)"
        - name: SUPERSET_HOME
          value: /app/superset_home
        {{- end }}
        {{- if .Values.superset.env.redis.enabled }}
        - name: REDIS_HOST
          value: {{ .Values.superset.env.redis.host }}
        - name: REDIS_PORT
          value: {{ .Values.superset.env.redis.port | quote }}
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "superset.name" . }}-secret
              key: redis-password
        {{- end }}
        volumeMounts:
        - name: superset-config
          mountPath: /app/pythonpath
        - name: superset-home
          mountPath: /app/superset_home
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 90
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        resources:
          {{ toYaml .Values.superset.resources | nindent 10 }}
      volumes:
      - name: superset-config
        configMap:
          name: {{ include "superset.name" . }}-config
      - name: superset-home
        emptyDir: {}