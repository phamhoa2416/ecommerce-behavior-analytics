apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "clickhouse.name" . }}
  labels:
    {{ include "clickhouse.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "clickhouse.name" . }}-headless
  replicas: {{ .Values.clickhouse.replicas }}
  selector:
    matchLabels:
      {{ include "clickhouse.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{ include "clickhouse.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: clickhouse
          image: "{{ .Values.clickhouse.image.repository }}:{{ .Values.clickhouse.image.tag }}"
          imagePullPolicy: {{ .Values.clickhouse.image.imagePullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.clickhouse.service.httpPort }}
              protocol: TCP
            - name: native
              containerPort: {{ .Values.clickhouse.service.tcpPort }}
              protocol: TCP
            - name: interserver
              containerPort: {{ .Values.clickhouse.service.interserverPort }}
              protocol: TCP
          env:
            - name: CLICKHOUSE_DB
              valueFrom:
                secretKeyRef:
                  name: {{ include "clickhouse.name" . }}-secret
                  key: database
            - name: CLICKHOUSE_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "clickhouse.name" . }}-secret
                  key: username
            - name: CLICKHOUSE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "clickhouse.name" . }}-secret
                  key: password
            - name: CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT
              value: {{ .Values.clickhouse.auth.defaultAccessManagement | quote }}

          {{- if .Values.clickhouse.healthcheck.enabled }}
          livenessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - "echo 'SELECT 1' | clickhouse-client --host localhost --port {{ .Values.clickhouse.service.tcpPort }} --user=$CLICKHOUSE_USER --password=$CLICKHOUSE_PASSWORD || exit 1"
            initialDelaySeconds: {{ .Values.clickhouse.healthcheck.startPeriod }}
            periodSeconds: {{ .Values.clickhouse.healthcheck.interval }}
            timeoutSeconds: {{ .Values.clickhouse.healthcheck.timeout }}
            failureThreshold: {{ .Values.clickhouse.healthcheck.retries }}

          readinessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - "echo 'SELECT 1' | clickhouse-client --host localhost --port {{ .Values.clickhouse.service.tcpPort }} --user=$CLICKHOUSE_USER --password=$CLICKHOUSE_PASSWORD || exit 1"
            initialDelaySeconds: {{ .Values.clickhouse.healthcheck.startPeriod }}
            periodSeconds: {{ .Values.clickhouse.healthcheck.interval }}
            timeoutSeconds: {{ .Values.clickhouse.healthcheck.timeout }}
            failureThreshold: {{ .Values.clickhouse.healthcheck.retries }}
          {{- end }}

          volumeMounts:
            - name: data
              mountPath: /var/lib/clickhouse
          resources:
            {{ toYaml .Values.clickhouse.resources | nindent 10 }}

      {{- if not .Values.clickhouse.persistence.enabled }}
      volumes:
        - name: data
          emptyDir: {}
      {{- end }}

  {{- if .Values.clickhouse.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          {{ include "clickhouse.labels" . | nindent 8 }}
      spec:
        accessModes:
          - {{ .Values.clickhouse.persistence.accessMode }}
        {{- if .Values.clickhouse.persistence.storageClass }}
        storageClassName: {{ .Values.clickhouse.persistence.storageClass }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.clickhouse.persistence.size }}
  {{- end }}
